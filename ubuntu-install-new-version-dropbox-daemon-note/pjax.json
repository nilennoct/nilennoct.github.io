{"title":"Ubuntu安装新版Dropbox的注意事项","url":"/ubuntu-install-new-version-dropbox-daemon-note/","content":"<p>之前的ubuntu图方便是直接用wubi装的，结果前两天手贱把disk.img给误删了，无奈之下，干脆就重装了（可惜我配好的环境啊T T）。</p>\n<p>分区、安装什么的都很顺利，PPA软件源我直接用Ubuntu Tweak管理了，确实很方便。不过在安装Dropbox的时候倒是遇到了一些麻烦。</p>\n<p>Dropbox官网上提供的下载只不过是一个空壳而已，安装后需要使用如下命令安装daemon。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">dropbox start -i</div></pre></td></tr></table></figure>\n\n<p>但是由于国内某些特殊原因，需要下载的内容无法直接下载。而因为SSL证书的问题，使用goagent也无法安装。于是提取了<a href=\"https://dl-web.dropbox.com/u/17/dropbox-lnx.x86-1.6.17.tar.gz\" target=\"_blank\" rel=\"external\">下载地址</a>通过浏览器直接下载到了安装包dropbox-lnx.x86-1.6.17.tar.gz。</p>\n<p>按照以前的安装方式，直接解压到~目录，运行.dropbox-dist目录下的dropbox文件即可。不过这次的新版似乎有所不同，之前这样使用都可以开机自动运行，通过dropbox start命令也可以正常启动。但这次dropbox start却一直提示未安装，看来新版的dropbox daemon的安装还是有变化的= =<br><a id=\"more\"></a></p>\n<p>用编辑器直接打开/usr/bin/dropbox（这其实就是个python文件），可以看到以下内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div></pre></td><td class=\"code\"><pre><div class=\"line\">PARENT_DIR = os.path.expanduser(<span class=\"string\">\"/var/lib/dropbox\"</span>)</div><div class=\"line\">DROPBOXD_PATH = <span class=\"string\">\"%s/.dropbox-dist/dropboxd\"</span> % PARENT_DIR</div><div class=\"line\"></div><div class=\"line\">......</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">start_dropbox</span><span class=\"params\">()</span>:</span></div><div class=\"line\">\tdb_path = os.path.expanduser(DROPBOXD_PATH).encode(sys.getfilesystemencoding())</div><div class=\"line\">\t<span class=\"keyword\">if</span> os.access(db_path, os.X_OK):</div><div class=\"line\">\t\tf = open(<span class=\"string\">\"/dev/null\"</span>, <span class=\"string\">\"w\"</span>)</div><div class=\"line\">\t\t<span class=\"comment\"># we don't reap the child because we're gonna die anyway, let init do it</span></div><div class=\"line\">\t\ta = subprocess.Popen([db_path], preexec_fn=os.setsid, cwd=os.path.expanduser(<span class=\"string\">\"~\"</span>),</div><div class=\"line\">\t\t\t\t\t\t\t stderr=sys.stderr, stdout=f, close_fds=<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\"># in seconds</span></div><div class=\"line\">\t\tinterval = <span class=\"number\">0.5</span></div><div class=\"line\">\t\twait_for = <span class=\"number\">60</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> xrange(int(wait_for / interval)):</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> is_dropbox_running():</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">True</span></div><div class=\"line\">\t\t\t<span class=\"comment\"># back off from connect for a while</span></div><div class=\"line\">\t\t\ttime.sleep(interval)</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">False</span></div><div class=\"line\">\t<span class=\"keyword\">else</span>:</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\">......</div><div class=\"line\"></div><div class=\"line\"><span class=\"decorator\">@command</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">start</span><span class=\"params\">(argv)</span>:</span></div><div class=\"line\">\t<span class=\"string\">u\"\"\"start dropboxd</span></div><div class=\"line\">dropbox start [-i]</div><div class=\"line\"></div><div class=\"line\">Starts the dropbox daemon, dropboxd. If dropboxd is already running, this will do nothing.</div><div class=\"line\"></div><div class=\"line\">options:</div><div class=\"line\">  -i --install  auto install dropboxd if not available on the system</div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\">\tshould_install = <span class=\"string\">\"-i\"</span> <span class=\"keyword\">in</span> argv <span class=\"keyword\">or</span> <span class=\"string\">\"--install\"</span> <span class=\"keyword\">in</span> argv</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\"># first check if dropbox is already running</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> is_dropbox_running():</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> grab_link_url_if_necessary():</div><div class=\"line\">\t\t\tconsole_print(<span class=\"string\">u\"Dropbox is already running!\"</span>)</div><div class=\"line\">\t\t<span class=\"keyword\">return</span></div><div class=\"line\"></div><div class=\"line\">\tconsole_print(<span class=\"string\">u\"Starting Dropbox...\"</span>, linebreak=<span class=\"keyword\">False</span>)</div><div class=\"line\">\tconsole_flush()</div><div class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> start_dropbox():</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> should_install:</div><div class=\"line\">\t\t\tconsole_print()</div><div class=\"line\">\t\t\tconsole_print(<span class=\"string\">u\"The Dropbox daemon is not installed!\"</span>)</div><div class=\"line\">\t\t\tconsole_print(<span class=\"string\">u\"\"\"Run \\\"dropbox start -i\\\" to install the daemon\"\"\"</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\"># install dropbox!!!</span></div><div class=\"line\">\t\t<span class=\"keyword\">try</span>:</div><div class=\"line\">\t\t\targs = [ <span class=\"string\">\"pkexec\"</span>, <span class=\"string\">\"dropbox\"</span> ]</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> <span class=\"string\">\"http_proxy\"</span> <span class=\"keyword\">in</span> os.environ:</div><div class=\"line\">\t\t\t\targs.extend([<span class=\"string\">\"--http-proxy\"</span>, os.environ[<span class=\"string\">\"http_proxy\"</span>]])</div><div class=\"line\">\t\t\targs.append(<span class=\"string\">\"update\"</span>)</div><div class=\"line\">\t\t\tstatus = os.spawnvp(os.P_WAIT, <span class=\"string\">\"pkexec\"</span>, args)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> status != <span class=\"number\">0</span>:</div><div class=\"line\">\t\t\t\tconsole_print(<span class=\"string\">u\"The installation of Dropbox failed.\"</span>)</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></div><div class=\"line\">\t\t<span class=\"keyword\">except</span>:</div><div class=\"line\">\t\t\t<span class=\"keyword\">pass</span></div><div class=\"line\">\t\t<span class=\"keyword\">else</span>:</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> GUI_AVAILABLE:</div><div class=\"line\">\t\t\t\tstart_dropbox()</div><div class=\"line\">\t\t\t\tconsole_print(<span class=\"string\">u\"Done!\"</span>)</div><div class=\"line\">\t\t\t<span class=\"keyword\">else</span>:</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> start_dropbox():</div><div class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> grab_link_url_if_necessary():</div><div class=\"line\">\t\t\t\t\t\tconsole_print(<span class=\"string\">u\"Done!\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">else</span>:</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> grab_link_url_if_necessary():</div><div class=\"line\">\t\t\tconsole_print(<span class=\"string\">u\"Done!\"</span>)</div></pre></td></tr></table></figure>\n\n<p>很容易发现这个dropbox daemon的安装位置已经改为了/var/lib/dropbox。将.dropbox-dist移过来，重新运行dropbox start，这下Dropbox就可以正常启动了，注销后重新登录也能自动启动了。</p>\n","layout":"post"}