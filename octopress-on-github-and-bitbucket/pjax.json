{"title":"","url":"/octopress-on-github-and-bitbucket/","content":"<hr>\n<p>layout: post<br>title: “Octopress搭建小记”<br>slug: install-octopress-on-github-and-bitbucket<br>date: 2013-05-10 14:05<br>comments: true<br>categories:</p>\n<ul>\n<li>Note<br>tags:<br>-Blog</li>\n</ul>\n<hr>\n<p>偶然看到了<a href=\"http://octopress.org/\" target=\"_blank\" rel=\"external\">Octopress</a>的介绍，我便被它惊人的载入速度和独特的离线写作模式吸引了。虽然之前的Wordpress使用的也挺不错的，但细想之下其实我还真用不到那么多功能，顿时让我有了把博客迁移到Octopress上的冲动。</p>\n<p>网络上关于Octopress的部署教程已经有很多了，一种不错的方案是使用<a href=\"http://pages.github.com/\" target=\"_blank\" rel=\"external\">Github Pages</a>服务。不过考虑到数据的安全性（比如<code>_config.yml</code>、一些第三方服务的API Key等），我决定同时使用Bitbucket和Github，即使用Bitbucket的私有Repo管理source，使用Github管理生成的页面。</p>\n<p>Ruby环境的搭建以及Octopress的安装方法可以在Octopress的文档中找到，这里主要记录部署过程(Ubuntu环境)。</p>\n<blockquote>\n<p><a href=\"http://octopress.org/docs/\" target=\"_blank\" rel=\"external\">Octopress Documentation</a></p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p>首先登陆Bitbucket，选择<code>Import repository</code>（亦可依次按下<code>i</code>、<code>r</code>），填写Github上Octopress的项目地址：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">URL</span>: <span class=\"string\">git@github.com:imathis/octopress.git</span></div><div class=\"line\"><span class=\"attribute\">Name</span>: <span class=\"string\">octopress</span></div></pre></td></tr></table></figure>\n\n<p>接下来登陆Github，以<code>github_username.github.io</code>为Repository name建立一个新的repo，这个将用来存放博客页面。</p>\n<blockquote>\n<p>详见 <a href=\"https://help.github.com/articles/user-organization-and-project-pages\" target=\"_blank\" rel=\"external\">User, Organization and Project Pages</a></p>\n</blockquote>\n<p>接下来clone刚建立的repo到本地。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> ~</div><div class=\"line\">$ git clone git@bitbucket.org:bitbucket_username/octopress.git octopress</div><div class=\"line\">$ <span class=\"built_in\">cd</span> octopress</div><div class=\"line\">$ git remote add octopress https://github.com/imathis/octopress</div></pre></td></tr></table></figure>\n\n<p>最后一条命令将Github上的官方repo添加到当前git配置中，以后可以用来升级Octopress系统。</p>\n<p>按官方文档的方法安装好Octopress，执行以下命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ rake generate</div><div class=\"line\">$ rake deploy</div></pre></td></tr></table></figure>\n\n<p>Octopress会自动生成一个<code>_deploy</code>文件夹，里面存放的就是用来发布到Github上的静态页面。不过因为还没有配置，所以此时是发布到了Bitbucket的gh-pages分支中。</p>\n<p>打开<code>Rakefile</code>，修改<code>deploy_branch</code>的值为<code>master</code>，然后修改<code>_deploy</code>目录中的git配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> _deploy</div><div class=\"line\">$ nano .git/config</div></pre></td></tr></table></figure>\n\n<p>修改<code>[remote &quot;origin&quot;]</code>中的<code>url</code>，将其修改为</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git<span class=\"variable\">@github</span>.<span class=\"symbol\">com:</span>github_username/github_username.github.io.git</div></pre></td></tr></table></figure>\n\n<p>保存git配置后，切换分支为master，上传文件。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$ </span>git branch master</div><div class=\"line\"><span class=\"variable\">$ </span>git checkout master</div><div class=\"line\"><span class=\"variable\">$ </span>git push -u origin master</div></pre></td></tr></table></figure>\n\n<p>大约过10分钟后，访问<code>github_username.github.io</code>就可以看到你的博客了。</p>\n<p>Github Pages支持绑定域名，首先在你的域名管理中，添加一个<code>CNAME</code>记录，指向<code>github_username.github.io</code>，然后执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> ~/octopress</div><div class=\"line\">$ <span class=\"built_in\">echo</span> your_domain &gt; <span class=\"built_in\">source</span>/CNAME</div><div class=\"line\">$ rake generate</div><div class=\"line\">$ rake deploy</div></pre></td></tr></table></figure>\n\n<p>稍候片刻，待域名信息更新后就可以通过绑定的域名访问博客了。</p>\n<blockquote>\n<p>详见 <a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\" target=\"_blank\" rel=\"external\">Setting up a custom domain with Pages</a></p>\n</blockquote>\n<p>至此Octopress的安装部署就完成了。以后写完日志，只需要执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># pwd is ~/octopress</span></div><div class=\"line\">$ rake generate</div><div class=\"line\">$ rake deploy</div><div class=\"line\">$ git push origin master</div></pre></td></tr></table></figure>\n\n<p>即可实现博客的更新以及Bitbucket的数据备份。</p>\n","layout":"post"}