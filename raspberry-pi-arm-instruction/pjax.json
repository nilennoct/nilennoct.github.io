{"title":"[RPi] ARM指令","url":"/raspberry-pi-arm-instruction/","content":"<blockquote>\n<p>浙江大学嵌入式系统课程</p>\n</blockquote>\n<p><strong>生成了Thumb指令还是ARM指令，如何通过编译参数改变</strong></p>\n<p>编写测试代码arm.c。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#<span class=\"keyword\">include</span> &lt;stdio.h&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main() {</div><div class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">0</span>;</div><div class=\"line\">\ta++;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>用如下命令编译，并使用objdump查看。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c arm.c</div><div class=\"line\">objdump -d arm.o</div><div class=\"line\"></div><div class=\"line\">arm.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;main&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te52db004 \tpush\t{fp}\t\t; (str fp, [sp, <span class=\"preprocessor\">#-4]!)</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te28db000 \tadd\tfp, sp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">8</span>:\te24dd00c \tsub\tsp, sp, <span class=\"preprocessor\">#12</span></div><div class=\"line\">   c:\te3a03000 \tmov\tr3, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">10</span>:\te50b3008 \tstr\tr3, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">14</span>:\te51b3008 \tldr\tr3, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">18</span>:\te2833001 \tadd\tr3, r3, <span class=\"preprocessor\">#1</span></div><div class=\"line\">  <span class=\"number\">1</span>c:\te50b3008 \tstr\tr3, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">20</span>:\te3a03000 \tmov\tr3, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">24</span>:\te1a00003 \tmov\tr0, r3</div><div class=\"line\">  <span class=\"number\">28</span>:\te28bd000 \tadd\tsp, fp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">2</span>c:\te8bd0800 \tpop\t{fp}</div><div class=\"line\">  <span class=\"number\">30</span>:\te12fff1e \tbx\tlr</div></pre></td></tr></table></figure>\n\n<p>可以看到指令长度都是32位的，说明gcc默认是以arm指令编译的。使用如下命令查找如何以Thumb编译。<br><a id=\"more\"></a></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc --target-help | grep [Tt]humb</div><div class=\"line\">-mcallee-super-interworking Thumb: Assume non-<span class=\"keyword\">static</span> functions may be called</div><div class=\"line\">-mcaller-super-interworking Thumb: Assume function pointers may go to non-Thumb aware code</div><div class=\"line\">-mthumb                     Compile <span class=\"keyword\">for</span> the Thumb not the ARM</div><div class=\"line\">-mthumb-interwork           Support calls between Thumb and ARM instruction</div><div class=\"line\">-mtpcs-frame                Thumb: Generate (non-leaf) <span class=\"built_in\">stack</span> frames even <span class=\"keyword\">if</span></div><div class=\"line\">-mtpcs-leaf-frame           Thumb: Generate (leaf) <span class=\"built_in\">stack</span> frames even <span class=\"keyword\">if</span> not</div><div class=\"line\">-mthumb                 assemble Thumb code</div><div class=\"line\">-mthumb-interwork       support ARM/Thumb interworking</div><div class=\"line\">--thumb-entry=&lt;sym&gt;         Set the entry point to be Thumb symbol &lt;sym&gt;</div><div class=\"line\">--[no-]fix-cortex-a8        Disable/enable Cortex-A8 Thumb-<span class=\"number\">2</span> branch erratum fix</div><div class=\"line\">--thumb-entry=&lt;sym&gt;         Set the entry point to be Thumb symbol &lt;sym&gt;</div><div class=\"line\">--[no-]fix-cortex-a8        Disable/enable Cortex-A8 Thumb-<span class=\"number\">2</span> branch erratum fix</div></pre></td></tr></table></figure>\n\n<p>可以看到使用“-mthumb”参数可以“Compile for the Thumb not the ARM”。下面来检验一下。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c -mthumb -msoft-<span class=\"keyword\">float</span> arm.c</div><div class=\"line\">objdump -d arm.o</div><div class=\"line\"></div><div class=\"line\">arm.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;main&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\tb580      \tpush\t{r7, lr}</div><div class=\"line\">   <span class=\"number\">2</span>:\tb082      \tsub\tsp, <span class=\"preprocessor\">#8</span></div><div class=\"line\">   <span class=\"number\">4</span>:\taf00      \tadd\tr7, sp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">6</span>:\t<span class=\"number\">2300</span>      \tmovs\tr3, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">8</span>:\t<span class=\"number\">607</span>b      \tstr\tr3, [r7, <span class=\"preprocessor\">#4]</span></div><div class=\"line\">   a:\t<span class=\"number\">687</span>b      \tldr\tr3, [r7, <span class=\"preprocessor\">#4]</span></div><div class=\"line\">   c:\t<span class=\"number\">3301</span>      \tadds\tr3, <span class=\"preprocessor\">#1</span></div><div class=\"line\">   e:\t<span class=\"number\">607</span>b      \tstr\tr3, [r7, <span class=\"preprocessor\">#4]</span></div><div class=\"line\">  <span class=\"number\">10</span>:\t<span class=\"number\">2300</span>      \tmovs\tr3, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">12</span>:\t<span class=\"number\">1</span>c18      \tadds\tr0, r3, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">14</span>:\t<span class=\"number\">46</span>bd      \tmov\tsp, r7</div><div class=\"line\">  <span class=\"number\">16</span>:\tb002      \tadd\tsp, <span class=\"preprocessor\">#8</span></div><div class=\"line\">  <span class=\"number\">18</span>:\tbd80      \tpop\t{r7, pc}</div><div class=\"line\">  <span class=\"number\">1</span>a:\t<span class=\"number\">46</span>c0      \tnop\t\t\t; (mov r8, r8)</div></pre></td></tr></table></figure>\n\n<p>可以看到指令长度变成了16位，即使用了Thumb指令。</p>\n<hr>\n<p><strong>对于ARM指令，能否产生条件执行的指令</strong></p>\n<p>编写测试代码branch.c。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#<span class=\"keyword\">include</span> &lt;stdio.h&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> f(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b) {</div><div class=\"line\">\t<span class=\"keyword\">int</span> t;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (a &gt; b)</div><div class=\"line\">\t\tt = a - b--;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (a == b - <span class=\"number\">10</span>)</div><div class=\"line\">\t\tt = a + b++;</div><div class=\"line\">\t<span class=\"keyword\">return</span> t;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main() {</div><div class=\"line\">\tf(<span class=\"number\">10</span>, <span class=\"number\">20</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>使用如下命令编译，并使用objdump查看结果。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c branch.c -O3</div><div class=\"line\">objdump -d branch.o</div><div class=\"line\"></div><div class=\"line\">branch.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;f&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te1500001 \tcmp\tr0, r1</div><div class=\"line\">   <span class=\"number\">4</span>:\tc0613000 \trsbgt\tr3, r1, r0</div><div class=\"line\">   <span class=\"number\">8</span>:\tc2411001 \tsubgt\tr1, r1, <span class=\"preprocessor\">#1</span></div><div class=\"line\">   c:\te241200a \tsub\tr2, r1, <span class=\"preprocessor\">#10</span></div><div class=\"line\">  <span class=\"number\">10</span>:\te1520000 \tcmp\tr2, r0</div><div class=\"line\">  <span class=\"number\">14</span>:\t<span class=\"number\">00813000</span> \taddeq\tr3, r1, r0</div><div class=\"line\">  <span class=\"number\">18</span>:\te1a00003 \tmov\tr0, r3</div><div class=\"line\">  <span class=\"number\">1</span>c:\te12fff1e \tbx\tlr</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text.startup:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;main&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te3a00000 \tmov\tr0, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te12fff1e \tbx\tlr</div></pre></td></tr></table></figure>\n\n<p>可以看到有rsbgt、subgt、addeq等条件执行指令的出现。</p>\n<hr>\n<p><strong>设计C的代码场景，观察是否产生了寄存器移位寻址</strong></p>\n<p>编写测试代码shift.c。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#<span class=\"keyword\">include</span> &lt;stdio.h&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> f(<span class=\"keyword\">int</span> i) {</div><div class=\"line\">\t<span class=\"keyword\">int</span> a[<span class=\"number\">20</span>];</div><div class=\"line\">\ta[<span class=\"number\">19</span>] = a[i*<span class=\"number\">2</span>];</div><div class=\"line\">\t<span class=\"keyword\">return</span> a[<span class=\"number\">19</span>];</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main() {</div><div class=\"line\">\t<span class=\"keyword\">int</span> b = f(<span class=\"number\">5</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>使用如下命令编译，并使用objdump查看结果。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c shift.c -O3</div><div class=\"line\">objdump -d shift.o</div><div class=\"line\"></div><div class=\"line\">shift.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;f&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te24dd050 \tsub\tsp, sp, <span class=\"preprocessor\">#80\t; 0x50</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te28d3050 \tadd\tr3, sp, <span class=\"preprocessor\">#80\t; 0x50</span></div><div class=\"line\">   <span class=\"number\">8</span>:\te0830180 \tadd\tr0, r3, r0, lsl <span class=\"preprocessor\">#3</span></div><div class=\"line\">   c:\te5100050 \tldr\tr0, [r0, <span class=\"preprocessor\">#-80]\t; 0x50</span></div><div class=\"line\">  <span class=\"number\">10</span>:\te28dd050 \tadd\tsp, sp, <span class=\"preprocessor\">#80\t; 0x50</span></div><div class=\"line\">  <span class=\"number\">14</span>:\te12fff1e \tbx\tlr</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text.startup:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;main&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te3a00000 \tmov\tr0, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te12fff1e \tbx\tlr</div></pre></td></tr></table></figure>\n\n<p>可以看到在命令“add    r0, r3, r0, lsl #3”中，第2个寄存器操作数先做了左移三位的操作，然后再与第1个操作数相加。</p>\n<hr>\n<p><strong>设计C的代码场景,观察一个复杂的32位数是如何装载到寄存器的</strong></p>\n<p>编写测试代码bigint.c。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#<span class=\"keyword\">include</span> &lt;stdio.h&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> f() {</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0xFDB86420</span>;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main() {</div><div class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> a;</div><div class=\"line\">\ta = f();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>使用如下命令编译，并使用objdump查看结果。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c bigint.c</div><div class=\"line\">objdump -d bigint.o</div><div class=\"line\"></div><div class=\"line\">bigint.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;f&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te52db004 \tpush\t{fp}\t\t; (str fp, [sp, <span class=\"preprocessor\">#-4]!)</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te28db000 \tadd\tfp, sp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">8</span>:\te59f300c \tldr\tr3, [pc, <span class=\"preprocessor\">#12]\t; 1c &lt;f+0x1c&gt;</span></div><div class=\"line\">   c:\te1a00003 \tmov\tr0, r3</div><div class=\"line\">  <span class=\"number\">10</span>:\te28bd000 \tadd\tsp, fp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">14</span>:\te8bd0800 \tpop\t{fp}</div><div class=\"line\">  <span class=\"number\">18</span>:\te12fff1e \tbx\tlr</div><div class=\"line\">  <span class=\"number\">1</span>c:\tfdb86420 \t.word\t<span class=\"number\">0xfdb86420</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000020</span> &lt;main&gt;:</div><div class=\"line\">  <span class=\"number\">20</span>:\te92d4800 \tpush\t{fp, lr}</div><div class=\"line\">  <span class=\"number\">24</span>:\te28db004 \tadd\tfp, sp, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  <span class=\"number\">28</span>:\te24dd008 \tsub\tsp, sp, <span class=\"preprocessor\">#8</span></div><div class=\"line\">  <span class=\"number\">2</span>c:\tebfffffe \tbl\t<span class=\"number\">0</span> &lt;f&gt;</div><div class=\"line\">  <span class=\"number\">30</span>:\te50b0008 \tstr\tr0, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">34</span>:\te3a03000 \tmov\tr3, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">38</span>:\te1a00003 \tmov\tr0, r3</div><div class=\"line\">  <span class=\"number\">3</span>c:\te24bd004 \tsub\tsp, fp, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  <span class=\"number\">40</span>:\te8bd8800 \tpop\t{fp, pc}</div></pre></td></tr></table></figure>\n\n<p>可以看到ARM在处理32位数的时候，不是像MIPS那样通过lui、ori指令实现，而是直接将其作为伪指令存在内存中，通过ldr指令读取到寄存器中。</p>\n<hr>\n<p><strong>写一个C的多重函数调用的程序，观察和分析</strong></p>\n<p>编写测试代码bigint.c。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#<span class=\"keyword\">include</span> &lt;stdio.h&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> a(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> z, <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> n) {</div><div class=\"line\">\t<span class=\"keyword\">return</span> l * x + m * y + n * z;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> b(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> z) {</div><div class=\"line\">\t<span class=\"keyword\">int</span> l = <span class=\"number\">4</span>, m = <span class=\"number\">2</span>, n = <span class=\"number\">1</span>;</div><div class=\"line\">\tx++; y++; z++;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> a(x, y, z, l, m, n);</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main() {</div><div class=\"line\">\t<span class=\"keyword\">int</span> a = b(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>使用如下命令编译，并使用objdump查看结果。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c call.c</div><div class=\"line\">objdump -d call.o</div><div class=\"line\"></div><div class=\"line\">call.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;a&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te52db004 \tpush\t{fp}\t\t; (str fp, [sp, <span class=\"preprocessor\">#-4]!)</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te28db000 \tadd\tfp, sp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">8</span>:\te24dd014 \tsub\tsp, sp, <span class=\"preprocessor\">#20</span></div><div class=\"line\">   c:\te50b0008 \tstr\tr0, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">10</span>:\te50b100c \tstr\tr1, [fp, <span class=\"preprocessor\">#-12]</span></div><div class=\"line\">  <span class=\"number\">14</span>:\te50b2010 \tstr\tr2, [fp, <span class=\"preprocessor\">#-16]</span></div><div class=\"line\">  <span class=\"number\">18</span>:\te50b3014 \tstr\tr3, [fp, <span class=\"preprocessor\">#-20]</span></div><div class=\"line\">  <span class=\"number\">1</span>c:\te51b3014 \tldr\tr3, [fp, <span class=\"preprocessor\">#-20]</span></div><div class=\"line\">  <span class=\"number\">20</span>:\te51b2008 \tldr\tr2, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">24</span>:\te0020392 \tmul\tr2, r2, r3</div><div class=\"line\">  <span class=\"number\">28</span>:\te59b3004 \tldr\tr3, [fp, <span class=\"preprocessor\">#4]</span></div><div class=\"line\">  <span class=\"number\">2</span>c:\te51b100c \tldr\tr1, [fp, <span class=\"preprocessor\">#-12]</span></div><div class=\"line\">  <span class=\"number\">30</span>:\te0030391 \tmul\tr3, r1, r3</div><div class=\"line\">  <span class=\"number\">34</span>:\te0822003 \tadd\tr2, r2, r3</div><div class=\"line\">  <span class=\"number\">38</span>:\te59b3008 \tldr\tr3, [fp, <span class=\"preprocessor\">#8]</span></div><div class=\"line\">  <span class=\"number\">3</span>c:\te51b1010 \tldr\tr1, [fp, <span class=\"preprocessor\">#-16]</span></div><div class=\"line\">  <span class=\"number\">40</span>:\te0030391 \tmul\tr3, r1, r3</div><div class=\"line\">  <span class=\"number\">44</span>:\te0823003 \tadd\tr3, r2, r3</div><div class=\"line\">  <span class=\"number\">48</span>:\te1a00003 \tmov\tr0, r3</div><div class=\"line\">  <span class=\"number\">4</span>c:\te28bd000 \tadd\tsp, fp, <span class=\"preprocessor\">#0</span></div><div class=\"line\">  <span class=\"number\">50</span>:\te8bd0800 \tpop\t{fp}</div><div class=\"line\">  <span class=\"number\">54</span>:\te12fff1e \tbx\tlr</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000058</span> &lt;b&gt;:</div><div class=\"line\">  <span class=\"number\">58</span>:\te92d4800 \tpush\t{fp, lr}</div><div class=\"line\">  <span class=\"number\">5</span>c:\te28db004 \tadd\tfp, sp, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  <span class=\"number\">60</span>:\te24dd028 \tsub\tsp, sp, <span class=\"preprocessor\">#40\t; 0x28</span></div><div class=\"line\">  <span class=\"number\">64</span>:\te50b0018 \tstr\tr0, [fp, <span class=\"preprocessor\">#-24]</span></div><div class=\"line\">  <span class=\"number\">68</span>:\te50b101c \tstr\tr1, [fp, <span class=\"preprocessor\">#-28]</span></div><div class=\"line\">  <span class=\"number\">6</span>c:\te50b2020 \tstr\tr2, [fp, <span class=\"preprocessor\">#-32]</span></div><div class=\"line\">  <span class=\"number\">70</span>:\te3a03004 \tmov\tr3, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  <span class=\"number\">74</span>:\te50b3008 \tstr\tr3, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  <span class=\"number\">78</span>:\te3a03002 \tmov\tr3, <span class=\"preprocessor\">#2</span></div><div class=\"line\">  <span class=\"number\">7</span>c:\te50b300c \tstr\tr3, [fp, <span class=\"preprocessor\">#-12]</span></div><div class=\"line\">  <span class=\"number\">80</span>:\te3a03001 \tmov\tr3, <span class=\"preprocessor\">#1</span></div><div class=\"line\">  <span class=\"number\">84</span>:\te50b3010 \tstr\tr3, [fp, <span class=\"preprocessor\">#-16]</span></div><div class=\"line\">  <span class=\"number\">88</span>:\te51b3018 \tldr\tr3, [fp, <span class=\"preprocessor\">#-24]</span></div><div class=\"line\">  <span class=\"number\">8</span>c:\te2833001 \tadd\tr3, r3, <span class=\"preprocessor\">#1</span></div><div class=\"line\">  <span class=\"number\">90</span>:\te50b3018 \tstr\tr3, [fp, <span class=\"preprocessor\">#-24]</span></div><div class=\"line\">  <span class=\"number\">94</span>:\te51b301c \tldr\tr3, [fp, <span class=\"preprocessor\">#-28]</span></div><div class=\"line\">  <span class=\"number\">98</span>:\te2833001 \tadd\tr3, r3, <span class=\"preprocessor\">#1</span></div><div class=\"line\">  <span class=\"number\">9</span>c:\te50b301c \tstr\tr3, [fp, <span class=\"preprocessor\">#-28]</span></div><div class=\"line\">  a0:\te51b3020 \tldr\tr3, [fp, <span class=\"preprocessor\">#-32]</span></div><div class=\"line\">  a4:\te2833001 \tadd\tr3, r3, <span class=\"preprocessor\">#1</span></div><div class=\"line\">  a8:\te50b3020 \tstr\tr3, [fp, <span class=\"preprocessor\">#-32]</span></div><div class=\"line\">  ac:\te51b300c \tldr\tr3, [fp, <span class=\"preprocessor\">#-12]</span></div><div class=\"line\">  b0:\te58d3000 \tstr\tr3, [sp]</div><div class=\"line\">  b4:\te51b3010 \tldr\tr3, [fp, <span class=\"preprocessor\">#-16]</span></div><div class=\"line\">  b8:\te58d3004 \tstr\tr3, [sp, <span class=\"preprocessor\">#4]</span></div><div class=\"line\">  bc:\te51b0018 \tldr\tr0, [fp, <span class=\"preprocessor\">#-24]</span></div><div class=\"line\">  c0:\te51b101c \tldr\tr1, [fp, <span class=\"preprocessor\">#-28]</span></div><div class=\"line\">  c4:\te51b2020 \tldr\tr2, [fp, <span class=\"preprocessor\">#-32]</span></div><div class=\"line\">  c8:\te51b3008 \tldr\tr3, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\">  cc:\tebfffffe \tbl\t<span class=\"number\">0</span> &lt;a&gt;</div><div class=\"line\">  d0:\te1a03000 \tmov\tr3, r0</div><div class=\"line\">  d4:\te1a00003 \tmov\tr0, r3</div><div class=\"line\">  d8:\te24bd004 \tsub\tsp, fp, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  dc:\te8bd8800 \tpop\t{fp, pc}</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">000000e0</span> &lt;main&gt;:</div><div class=\"line\">  e0:\te92d4800 \tpush\t{fp, lr}</div><div class=\"line\">  e4:\te28db004 \tadd\tfp, sp, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  e8:\te24dd008 \tsub\tsp, sp, <span class=\"preprocessor\">#8</span></div><div class=\"line\">  ec:\te3a00001 \tmov\tr0, <span class=\"preprocessor\">#1</span></div><div class=\"line\">  f0:\te3a01002 \tmov\tr1, <span class=\"preprocessor\">#2</span></div><div class=\"line\">  f4:\te3a02004 \tmov\tr2, <span class=\"preprocessor\">#4</span></div><div class=\"line\">  f8:\tebfffffe \tbl\t<span class=\"number\">58</span> &lt;b&gt;</div><div class=\"line\">  fc:\te50b0008 \tstr\tr0, [fp, <span class=\"preprocessor\">#-8]</span></div><div class=\"line\"> <span class=\"number\">100</span>:\te3a03000 \tmov\tr3, <span class=\"preprocessor\">#0</span></div><div class=\"line\"> <span class=\"number\">104</span>:\te1a00003 \tmov\tr0, r3</div><div class=\"line\"> <span class=\"number\">108</span>:\te24bd004 \tsub\tsp, fp, <span class=\"preprocessor\">#4</span></div><div class=\"line\"> <span class=\"number\">10</span>c:\te8bd8800 \tpop\t{fp, pc}</div></pre></td></tr></table></figure>\n\n<p>分析得到的汇编代码可以得知：</p>\n<ul>\n<li>调用时的返回地址在lr中；</li>\n<li>传入的参数保存在r0—r3中，若有更多的参数则多出的参数存在内存中；</li>\n<li>本地变量的堆栈分配在高地址，传递进来的参数分配在低地址；</li>\n<li>寄存器是callee保存的，部分保存。</li>\n</ul>\n<hr>\n<p><strong>MLA是带累加的乘法，尝试要如何写C的表达式能编译得到MLA指令</strong></p>\n<p>编写测试代码mla.c。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"preprocessor\">#<span class=\"keyword\">include</span> &lt;stdio.h&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> f(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c) {</div><div class=\"line\">\t<span class=\"keyword\">return</span> a * b + c;</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> main() {</div><div class=\"line\">\t<span class=\"keyword\">int</span> t;</div><div class=\"line\">\tt = f(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>用如下命令编译，并使用objdump查看。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">gcc -c mla.c -O3</div><div class=\"line\">objdump -d mla.o</div><div class=\"line\"></div><div class=\"line\">mla.o:     file format elf32-littlearm</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;f&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te0202091 \tmla\tr0, r1, r0, r2</div><div class=\"line\">   <span class=\"number\">4</span>:\te12fff1e \tbx\tlr</div><div class=\"line\"></div><div class=\"line\">Disassembly of section .text.startup:</div><div class=\"line\"></div><div class=\"line\"><span class=\"number\">00000000</span> &lt;main&gt;:</div><div class=\"line\">   <span class=\"number\">0</span>:\te3a00000 \tmov\tr0, <span class=\"preprocessor\">#0</span></div><div class=\"line\">   <span class=\"number\">4</span>:\te12fff1e \tbx\tlr</div></pre></td></tr></table></figure>\n\n<p>可以看到在f()函数中的运算使用了mla指令。</p>\n","layout":"post"}